Aivika is a relatively small simulation library that covers many paradigms. It allows integrating a system of ordinary differential equations from System Dynamics. Also it can be applied to the Discrete Event Simulation. It supports the event-oriented, process-oriented and activity-oriented paradigms. Aivika has also a basic support of the Agent-based Modeling.

It is possible due to using a very general approach when the basic modeling entity is just a function of simulation time. The continuations are naturally used for modeling the discontinuous processes. Using the objects allows the modeler to represent the agents and their states. The integrals can be defined recursively as in mathematics. It wouldn't be possible in low level programming languages. A high level functional programming language becomes a modeling language too.

There are three implementations of the Aivika library for the F#, Haskell and Scala programming languages. The represented Scala version has built-in powerful facilities that allow generating the simulation results in the form of HTML, graphics and CSV tables. It can plot the deviation chart, the time series, the XY chart, histograms etc. Also it can save the results in CSV files for the further processing by such tools as Microsoft Excel. At the same time, Aivika can gather the statistics and then reprensent them in text form. This step of generating and representing the results is very simplified. Many routine tasks are performed by Aivika itself. In the end the modeler receives an HTML site with the results, which can be studied with help of his/her favourite Internet browser.

This Scala version of Aivika is focused on the parameterized Monte Carlo simulation, although it is possible to run a single simulation too. The parameters may depend on the simulation run index. It is possible to design an experiment. The parameters can use pseudo-random number generators, or take values directly from the predefined tables. The magic is in that the Monte Carlo simulation is well adjusted to the module of generating the results, which greatly simplifies the process of analyzing the model.

I used Maven and IntelliJ IDEA with the installed Scala plugin to develop this version of Aivika. So, I can launch any of the examples in one step using the context menu of IDEA. It is very useful. But this library should work with any other Scala development environment as well.

I hope it helps.

Best regards,
David Sorokin <david.sorokin@gmail.com>